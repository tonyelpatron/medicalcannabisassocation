{"version":3,"sources":["webpack:///./src/components/Pricing.js","webpack:///./src/templates/product-page.js","webpack:///./src/components/Testimonials.js","webpack:///./src/components/Features.js"],"names":["Pricing","data","className","map","price","key","plan","description","items","item","ProductPageTemplate","image","title","heading","intro","main","testimonials","fullImage","pricing","style","backgroundImage","childImageSharp","fluid","src","boxShadow","backgroundColor","color","padding","Features","gridItems","blurbs","PreviewCompatibleImage","imageInfo","image1","image2","image3","Testimonials","plans","productPageQuery","ProductPage","frontmatter","markdownRemark","Layout","full_image","FeatureGrid","text","width","display"],"mappings":"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","file":"component---src-templates-product-page-js-f76216517f997b4870bc.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\n\nconst Pricing = ({ data }) => (\n  <div className=\"columns\">\n    {data.map((price) => (\n      <div key={price.plan} className=\"column\">\n        <section className=\"section\">\n          <h4 className=\"has-text-centered has-text-weight-semibold\">\n            {price.plan}\n          </h4>\n          <h2 className=\"is-size-1 has-text-weight-bold has-text-primary has-text-centered\">\n            ${price.price}\n          </h2>\n          <p className=\"has-text-weight-semibold\">{price.description}</p>\n          <ul>\n            {price.items.map((item) => (\n              <li key={item} className=\"is-size-5\">\n                {item}\n              </li>\n            ))}\n          </ul>\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nPricing.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      plan: PropTypes.string,\n      price: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n      description: PropTypes.string,\n      items: PropTypes.array,\n    })\n  ),\n}\n\nexport default Pricing\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/Layout'\nimport Features from '../components/Features'\nimport Testimonials from '../components/Testimonials'\nimport Pricing from '../components/Pricing'\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage'\n\nexport const ProductPageTemplate = ({\n  image,\n  title,\n  heading,\n  description,\n  intro,\n  main,\n  testimonials,\n  fullImage,\n  pricing,\n}) => (\n  <div className=\"content\">\n    <div\n      className=\"full-width-image-container margin-top-0\"\n      style={{\n        backgroundImage: `url(${\n          !!image.childImageSharp ? image.childImageSharp.fluid.src : image\n        })`,\n      }}\n    >\n      <h2\n        className=\"has-text-weight-bold is-size-1\"\n        style={{\n          boxShadow: '0.5rem 0 0 #f40, -0.5rem 0 0 #f40',\n          backgroundColor: '#f40',\n          color: 'white',\n          padding: '1rem',\n        }}\n      >\n        {title}\n      </h2>\n    </div>\n    <section className=\"section section--gradient\">\n      <div className=\"container\">\n        <div className=\"section\">\n          <div className=\"columns\">\n            <div className=\"column is-7 is-offset-1\">\n              <h3 className=\"has-text-weight-semibold is-size-2\">{heading}</h3>\n              <p>{description}</p>\n            </div>\n          </div>\n          <div className=\"columns\">\n            <div className=\"column is-10 is-offset-1\">\n              <Features gridItems={intro.blurbs} />\n              <div className=\"columns\">\n                <div className=\"column is-7\">\n                  <h3 className=\"has-text-weight-semibold is-size-3\">\n                    {main.heading}\n                  </h3>\n                  <p>{main.description}</p>\n                </div>\n              </div>\n              <div className=\"tile is-ancestor\">\n                <div className=\"tile is-vertical\">\n                  <div className=\"tile\">\n                    <div className=\"tile is-parent is-vertical\">\n                      <article className=\"tile is-child\">\n                        <PreviewCompatibleImage imageInfo={main.image1} />\n                      </article>\n                    </div>\n                    <div className=\"tile is-parent\">\n                      <article className=\"tile is-child\">\n                        <PreviewCompatibleImage imageInfo={main.image2} />\n                      </article>\n                    </div>\n                  </div>\n                  <div className=\"tile is-parent\">\n                    <article className=\"tile is-child\">\n                      <PreviewCompatibleImage imageInfo={main.image3} />\n                    </article>\n                  </div>\n                </div>\n              </div>\n              <Testimonials testimonials={testimonials} />\n              <div\n                className=\"full-width-image-container\"\n                style={{\n                  backgroundImage: `url(${\n                    fullImage.childImageSharp\n                      ? fullImage.childImageSharp.fluid.src\n                      : fullImage\n                  })`,\n                }}\n              />\n              <h2 className=\"has-text-weight-semibold is-size-2\">\n                {pricing.heading}\n              </h2>\n              <p className=\"is-size-5\">{pricing.description}</p>\n              <Pricing data={pricing.plans} />\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  </div>\n)\n\nProductPageTemplate.propTypes = {\n  image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  title: PropTypes.string,\n  heading: PropTypes.string,\n  description: PropTypes.string,\n  intro: PropTypes.shape({\n    blurbs: PropTypes.array,\n  }),\n  main: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    image1: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    image2: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n    image3: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  }),\n  testimonials: PropTypes.array,\n  fullImage: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n  pricing: PropTypes.shape({\n    heading: PropTypes.string,\n    description: PropTypes.string,\n    plans: PropTypes.array,\n  }),\n}\n\nconst ProductPage = ({ data }) => {\n  const { frontmatter } = data.markdownRemark\n\n  return (\n    <Layout>\n      <ProductPageTemplate\n        image={frontmatter.image}\n        title={frontmatter.title}\n        heading={frontmatter.heading}\n        description={frontmatter.description}\n        intro={frontmatter.intro}\n        main={frontmatter.main}\n        testimonials={frontmatter.testimonials}\n        fullImage={frontmatter.full_image}\n        pricing={frontmatter.pricing}\n      />\n    </Layout>\n  )\n}\n\nProductPage.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.shape({\n      frontmatter: PropTypes.object,\n    }),\n  }),\n}\n\nexport default ProductPage\n\nexport const productPageQuery = graphql`\n  query ProductPage($id: String!) {\n    markdownRemark(id: { eq: $id }) {\n      frontmatter {\n        title\n        image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        heading\n        description\n        intro {\n          blurbs {\n            image {\n              childImageSharp {\n                fluid(maxWidth: 240, quality: 64) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n            text\n          }\n          heading\n          description\n        }\n        main {\n          heading\n          description\n          image1 {\n            alt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 526, quality: 92) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          image2 {\n            alt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 526, quality: 92) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n          image3 {\n            alt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 1075, quality: 72) {\n                  ...GatsbyImageSharpFluid\n                }\n              }\n            }\n          }\n        }\n        testimonials {\n          author\n          quote\n        }\n        full_image {\n          childImageSharp {\n            fluid(maxWidth: 2048, quality: 100) {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        pricing {\n          heading\n          description\n          plans {\n            description\n            items\n            plan\n            price\n          }\n        }\n      }\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { v4 } from 'uuid'\n\nconst Testimonials = ({ testimonials }) => (\n  <div>\n    \n  </div>\n)\n\nTestimonials.propTypes = {\n  testimonials: PropTypes.arrayOf(\n    PropTypes.shape({\n      quote: PropTypes.string,\n      author: PropTypes.string,\n    })\n  ),\n}\n\nexport default Testimonials\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport PreviewCompatibleImage from '../components/PreviewCompatibleImage'\n\nconst FeatureGrid = ({ gridItems }) => (\n  <div className=\"columns is-multiline\">\n    {gridItems.map((item) => (\n      <div key={item.text} className=\"column is-6\">\n        <section className=\"section\">\n          <div className=\"has-text-centered\">\n            <div\n              style={{\n                width: '240px',\n                display: 'inline-block',\n              }}\n            >\n              <PreviewCompatibleImage imageInfo={item} />\n            </div>\n          </div>\n          <p>{item.text}</p>\n        </section>\n      </div>\n    ))}\n  </div>\n)\n\nFeatureGrid.propTypes = {\n  gridItems: PropTypes.arrayOf(\n    PropTypes.shape({\n      image: PropTypes.oneOfType([PropTypes.object, PropTypes.string]),\n      text: PropTypes.string,\n    })\n  ),\n}\n\nexport default FeatureGrid\n"],"sourceRoot":""}